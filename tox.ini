# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[tox]
minversion = 2.0
envlist =
    #setup,
    #clean,
    #check,
    #docs,
    #py36-cover,
    py37-cover,
    py38-cover,
    #py39-cover,
    #report,
    upload

[testenv]
wheel = true
basepython =
    bootstrap: python
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    {setup,docs,spell,clean,check,report,codecov,upload}: {env:TOXPYTHON:python3.8}
    #codecov
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    cover: SETUP_PY_EXT_COVERAGE=yes
passenv =
    *
#conda_channels= # Removed conda installation setup
#    defaults
#    conda-forge
#conda_deps =
#    cover: numpy
#    cover: pandas
#    cover: scipy
#    cover: lmfit
usedevelop =
    cover: true
    nocov: false
deps =
    pytest
    twine
    cover: pytest-cov
commands =
    cover: python setup.py clean --all build_ext --force --inplace
    #cover: twine check dist/*

    nocov: {posargs:pytest --ignore=src -vv}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv}


[testenv:upload]
deps=
    twine
allowlist_externals =
    {envbindir}/raman_fitting
passenv =
    *
ignore_outcome =
    true
commands =
    python setup.py sdist bdist_wheel
    twine check {distdir}/*
    # Before upload to testpypi the version number should be bumped up
    twine upload -r testpypi {distdir}/*


# Setup is passed for now since it is already done in the testenv
[testenv:setup]
passenv =
    *
install_command =
	pip install {opts} {packages}
deps =
	-rrequirements.txt
	twine

allowlist_externals =
    {envbindir}/raman_fitting

commands =
    python setup.py sdist bdist_wheel
    python twine check {toxinidir}/dist/*
    python twine upload -r testpypi {toxinidir}/dist/*


[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

[testenv:check]
deps =
    docutils
    flake8
    readme-renderer
    pygments
    isort
    setuptools-scm
    twine
skip_install = true
usedevelop = false
commands =

    #python setup.py check --strict --metadata --restructuredtext
    # check is deprecated use twine instead

    flake8 src tests setup.py
    isort --verbose --check-only --diff src tests setup.py

[testenv:docs]
usedevelop = true
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -E -j auto -b doctest docs dist/docs
    sphinx-build -E -j auto -b html docs dist/docs
    sphinx-build -j auto -b linkcheck docs dist/docs

[testenv:codecov]
deps =
    pytest
    codecov
skip_install = true
commands =
    pytest --cov --cov-report=xml
    #coverage xml --ignore-errors
    # codecov [] # skip codecov because of error

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    - coverage html

[testenv:clean]
deps = coverage
commands = coverage erase
skip_install = true

#[testenv:install_locally]
#deps =
#{[testenv]deps}

#setenv =
#  	PYTHONPATH=.

#commands =
#    python setup.py sdist bdist_wheel
#python raman_fitting/main_run_fit.py
