[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "raman_fitting"
license = {file = "LICENSE"}
authors = [
  {name = "David Wallace", email = "mypydavid@proton.me"},
]
description = "Python framework for the batch processing and deconvolution of raman spectra."
readme = {file = "README.md", content-type = "text/markdown"}
keywords = ["spectroscopy", "Raman", "fitting", "deconvolution", "batch processing", "carbonaceous materials"]
classifiers = [
	"License :: OSI Approved :: MIT License",
	"Natural Language :: English",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: Implementation :: CPython",
	"Programming Language :: Python :: Implementation :: PyPy",
	"Intended Audience :: Science/Research",
	"Topic :: Scientific/Engineering :: Physics",
	"Topic :: Scientific/Engineering :: Chemistry",
]
dynamic = ["version"]
dependencies = [
	"pandas~=2.1.2",
	"scipy~=1.11.3",
	"lmfit~=1.2.2",
	"matplotlib~=3.8.0",
	"numpy~=1.26.1",
	"tablib~=3.5.0",
	"pydantic>=2.5",
	"pydantic-settings>=2.1",
	"pydantic_numpy>=4.1",
	"loguru>=0.7",
	"typer[all]",
]

[project.optional-dependencies]
pytest = [
	"pytest",
	"pytest-cov",
	"pytest-flake8",
	"mock",
	"wheel"
	]
dev = [
	"isort",
	"pylint",
	"flake8",
	"autopep8",
	"pydocstyle",
	"black",
	"bump2version",
	"raman_fitting[pytest]"
	]

[project.urls]
homepage = "https://pypi.org/project/raman-fitting/"
repository = "https://github.com/MyPyDavid/raman-fitting.git"
# documentation = "https://raman-fitting.readthedocs.io/en/latest/"

[project.scripts]
raman_fitting = "raman_fitting.interfaces.typer_cli:app"


[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/raman_fitting/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["/profiling"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# testing
[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
    "-ra -q",
    "--cov",
    "--cov-report term-missing html xml annotate",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["src"]

[tool.bumpversion]
current_version = "0.8.0"
commit = true
commit_args = "--no-verify"
message = "Bump version: {current_version} → {new_version}"
tag = true
allow_dirty = true
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.dev(?P<dev>\\d+))?"
serialize =[
    "{major}.{minor}.{patch}.dev{dev}",
    "{major}.{minor}.{patch}"
]

[[tool.bumpversion.files]]
filename= "README.md"
search = "The current version is v{current_version}"
replace = "The current version is v{new_version}"

# [[bumpversion.files]]
# filename= "src/raman_fitting/__init__.py"
# search = "__version__ = '{current_version}'"
# replace = "__version__ = '{new_version}'"

# [[bumpversion.files]]
# filename= "src/raman_fitting/_version.py"
# search = "version = '{current_version}'"
# replace = "version = '{new_version}'"

[[tool.bumpversion.files]]
filename= "pyproject.toml"
search = "current_version = '{current_version}'"
replace = "current_version = '{new_version}'"
