# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI GH actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest


  unittests:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version : [3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 3.6
            toxenv: "py36-cover,report,codecov"
          - python-version: 3.7
            toxenv: "py37-cover,report,codecov"
          - python-version: 3.8
            toxenv: "py38-cover,report,codecov"
          - python-version: 3.9
            toxenv: "py39-cover,report,codecov"
        exclude:
          # TODO py39 on windows has errors so we exclude it for now
          - os: windows-latest
            python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.8
        activate-environment: test

    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools tox tox-conda
        conda install numpy pandas scipy matplotlib lmfit
        conda info
        conda env list
        pip --version
        virtualenv --version
        tox --version
    - name: Test with tox
      run: |
        tox -v
      env:
        TOXENV: ${{ matrix.toxenv }}
        # MPLBACKEND: "Agg"
