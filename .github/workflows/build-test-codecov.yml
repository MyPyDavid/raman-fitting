# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Lint Build Test Codecov

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
 
 build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        #[3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip  setuptools wheel
        python3 -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics
        
    - name: Build wheels
      run: |
        python3 setup.py sdist bdist_wheel
        # install the package in editable mode for the coverage report
        python -m pip install -e ./
        # Install the package from setup.py
        # python3 setup.py install
  
    
    - name: Install dependencies for coverage report
      run: |
        python3 -m pip install pytest pytest-cov coverage
     
    - name: Generate coverage report
      run: |
        pytest --cov --cov-report=xml --cov-report=term-missing
        # there were problems with coverage therefore pytest --cov is used here 
        # coverage xml
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
   
   #   with:
   # - name: Test with pytest
   #   run: |
   #     pytest
