# This is a basic workflow to help you get started with Actions

name: Test & Upload to TestPyPI

# Controls when the action will run. 
on:
  # Triggers the workflow on push to the master branch
  #push:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_publish:
    # The type of runner that the job will run on
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      #- name: Fetch all history for all tags and branches
      #  run: git fetch --prune --unshallow

      - name: Set up python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 

      # Installs and upgrades pip, installs other dependencies and installs the package from setup.py
      - name: "Installs and upgrades pip and installs other dependencies"
        run: |
          # Upgrade pip
          python3 -m pip install --upgrade pip
          # Install build deps
          python3 -m pip install setuptools wheel 
          python3 -m pip install setuptools-scm
          # If requirements.txt exists, install from it
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install the package from setup.py
          #python3 setup.py install
          python3 -m pip install --upgrade 
          
      - name: 'Builds the package'
        run: |
          python3 -m build
      # Tests with unittest
      #- name: Test with unittest
      #  run: |
      #    cd tests
      #    python3 -m pip install pytest pytest-cov coverage
      #    python3 -m unittest discover
      #    cd ..
      - name: Check to TestPyPI üì¶
        run: |
          python3 -m pip install twine
          twine check dist/*
      
      # Upload to TestPyPI
      - name: Publish package to TestPyPI üì¶
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TWINE_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      
      #- name: Build and Upload to TestPyPI 
      # run: |
      #    python3 -m pip install twine
      #    python3 -m twine upload dist/*
      #  env:
      #    TWINE_USERNAME: __token__
      #    TWINE_PASSWORD: ${{ secrets.TWINE_TEST_TOKEN }}
      #    TWINE_REPOSITORY: testpypi
