# This is a basic workflow to help you get started with Actions

name: Publish to TestPyPI and PyPI

# Controls when the action will run. 
on:
  # Triggers the workflow on push to the master branch
  #push:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build Python üêç distributions to üì¶
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        # with:
        # fetch-depth: 0
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow

      - name: Set up python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 

      # Installs and upgrades pip, installs other dependencies and installs the package from setup.py
      - name: Installs and upgrades pip and installs other dependencies
        run: |
          # Upgrade pip
          python3 -m pip install --upgrade pip
          # Install build deps
          python3 -m pip install setuptools wheel build
          python3 -m pip install setuptools-scm
          # If requirements.txt exists, install from it
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Builds the package
        run: |
          # Install the package from setup.py
          # python3 setup.py sdist bdist_wheel
          # Install package with build
          python3 -m build
      
      - name: Store wheel artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheel-${{ runner.os }}-${{ runner.python-version }}
          path: dist/*
          
  publish:
  
    name: Publish üì¶ to PyPI and TestPyPI
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Download wheel artifacts
        uses: actions/download-artifact@v2
        with:
          name: wheel-${{ runner.os }}-${{ runner.python-version }}
          path: dist/

      - name: Store aggregated wheel artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check to TestPyPI 
        run: |
          python3 -m pip install twine
          # Check twine in advance even though gh-action-pypi also does that
          twine check dist/*
        # Upload to TestPyPI
      - name: Publish package to TestPyPI üì¶
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TWINE_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish package to PyPI üì¶
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
